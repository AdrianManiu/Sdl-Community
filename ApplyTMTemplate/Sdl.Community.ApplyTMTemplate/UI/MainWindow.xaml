<controls:MetroWindow x:Class="Sdl.Community.ApplyTMTemplate.UI.MainWindow"
					  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
		              xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
					  xmlns:utilities="clr-namespace:Sdl.Community.ApplyTMTemplate.Utilities"
			          xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
				      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
					  xmlns:controls="http://metro.mahapps.com/winfx/xaml/controls"
					  xmlns:Dialog="clr-namespace:MahApps.Metro.Controls.Dialogs;assembly=MahApps.Metro"
					  Dialog:DialogParticipation.Register="{Binding}"
					  xmlns:converters="clr-namespace:Sdl.Community.ApplyTMTemplate.Converters"
					  xmlns:applyTmTemplate="clr-namespace:Sdl.Community.ApplyTMTemplate"
					  xmlns:ui="clr-namespace:Sdl.Community.ApplyTMTemplate.UI"
					  xmlns:viewModels="clr-namespace:Sdl.Community.ApplyTMTemplate.ViewModels"
					  WindowCloseButtonStyle="{DynamicResource CleanCloseWindowButtonStyle}"
					  WindowStartupLocation="CenterScreen"
					  TitleCharacterCasing="Normal"
		              mc:Ignorable="d"
				 	  GlowBrush="#0C2D47"
					  FontFamily="Calibri"
					  WindowTitleBrush="#008264"
					  Title="Apply TM Template" Width="{Binding Source={x:Static SystemParameters.PrimaryScreenWidth}, Converter={converters:RatioConverter}, ConverterParameter='0.48'}" Height="{Binding Source={x:Static SystemParameters.PrimaryScreenHeight}, Converter={converters:RatioConverter}, ConverterParameter='0.7'}" MinWidth="{Binding Source={x:Static SystemParameters.PrimaryScreenWidth}, Converter={converters:RatioConverter}, ConverterParameter='0.48'}" MinHeight="{Binding Source={x:Static SystemParameters.PrimaryScreenHeight}, Converter={converters:RatioConverter}, ConverterParameter='0.61'}">

	<Window.Resources>
		<ResourceDictionary>
			<ResourceDictionary.MergedDictionaries>
				<ResourceDictionary Source="../UiHelpers/MetroStyle.xaml" />
				<ResourceDictionary Source="../UiHelpers/ButtonsStyle.xaml" />
				<ResourceDictionary Source="../UiHelpers/TextBlockStyle.xaml" />
				<ResourceDictionary Source="../UiHelpers/TextBoxStyle.xaml" />
				<ResourceDictionary Source="../UiHelpers/DataGridStyle2.xaml"/>
				<ResourceDictionary Source="../UiHelpers/Buttons.xaml" />
			</ResourceDictionary.MergedDictionaries>
			<Style x:Key="CleanCloseWindowButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource MetroWindowButtonStyle}">
				<Style.Triggers>
					<Trigger Property="IsMouseOver" Value="True">
						<Setter Property="Background" Value="#EB2F2F" />
						<Setter Property="Foreground" Value="{DynamicResource WhiteBrush}" />
					</Trigger>
					<Trigger Property="IsPressed" Value="True">
						<Setter Property="Background" Value="#7C0000" />
					</Trigger>
				</Style.Triggers>
			</Style>
			<Style TargetType="Button" x:Key="SdlWizardStyleButtonGreen" BasedOn="{StaticResource SdlPrimaryButtonStyle}">
				<Setter Property="MinWidth" Value="70"></Setter>
				<Setter Property="Height" Value="34"></Setter>
				<Setter Property="Margin" Value="5,9,5,11"></Setter>
			</Style>
			<Style x:Key="TextBlockStyle" TargetType="{x:Type TextBlock}" BasedOn="{StaticResource {x:Type TextBlock}}">
				<Setter Property="FontSize" Value="12"/>
				<Setter Property="FontFamily" Value="Calibri"/>
				<Setter Property="Margin" Value="5,5,0,0"/>
			</Style>
			<Style x:Key="CheckBoxStyle" TargetType="{x:Type CheckBox}" BasedOn="{StaticResource {x:Type CheckBox}}">
				<Setter Property="Padding" Value="5"/>
				<Setter Property="FontFamily" Value="Calibri"/>
			</Style>
			<Style x:Key="ImageStyle" TargetType="Image">
				<Setter Property="Width" Value="15"/>
				<Setter Property="Height" Value="15"/>
				<Setter Property="HorizontalAlignment" Value="Right"/>
			</Style>
			<DataTemplate DataType="{x:Type viewModels:TimedTextBox}">
				<ui:TimedTextBox />
			</DataTemplate>
		</ResourceDictionary>
	</Window.Resources>

	<Grid>
		<Grid.ColumnDefinitions>
			<ColumnDefinition />
			<ColumnDefinition />
		</Grid.ColumnDefinitions>

		<Grid.RowDefinitions>
			<RowDefinition Height="Auto" />
			<RowDefinition Height="Auto" />
			<RowDefinition Height="Auto" />
			<RowDefinition Height="Auto" />
			<RowDefinition Height="Auto" />
			<RowDefinition Height="*" />
			<RowDefinition Height="Auto" />
		</Grid.RowDefinitions>

		<TextBlock FontSize="13" FontWeight="Bold" Grid.Row="0" Style="{StaticResource TextBlockStyle}" HorizontalAlignment="Left" TextWrapping="Wrap" Text="Select the template to be used: " VerticalAlignment="Top" Margin="5,10,0,0"  Grid.ColumnSpan="3" />

		<ui:TimedTextBox Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2" Height="32" Content="{Binding TimedTextBoxViewModel}" Margin="10,0,10,0"/>

		<StackPanel Grid.Column="0" Orientation="Horizontal" Grid.Row="2" Margin="0,5,0,0">
			<TextBlock Text="What to apply:" FontSize="13" Style="{StaticResource TextBlockStyle}" />
		</StackPanel>

		<StackPanel Orientation="Horizontal" Grid.Row="3" Grid.Column="0" Grid.ColumnSpan="2" Margin="10,10,0,0">
			<CheckBox Name="SelectAll" Content="Select all..." Style="{StaticResource CheckBoxStyle}" IsChecked="{Binding SelectAllChecked}" Margin="0,0,30,0"/>
			<CheckBox Content="Variables" Style="{StaticResource CheckBoxStyle}" IsChecked="{Binding VariablesChecked}"/>
			<CheckBox Content="Abbreviations" Style="{StaticResource CheckBoxStyle}" IsChecked="{Binding AbbreviationsChecked}"/>
			<CheckBox Content="Ordinal followers" Style="{StaticResource CheckBoxStyle}" IsChecked="{Binding OrdinalFollowersChecked}"/>
			<CheckBox Content="Segmentation rules" Style="{StaticResource CheckBoxStyle}" IsChecked="{Binding SegmentationRulesChecked}"/>
		</StackPanel>

		<StackPanel Margin="5,20,0,0" Grid.Row="4" Grid.Column="0" Orientation="Horizontal" ToolTip="Add Folder">
			<Button HorizontalContentAlignment="Left" Command="{Binding AddFolderCommand}">
				<StackPanel Orientation="Horizontal">
					<Image Source="../Resources/AddFolder.ico" Width="15" Height="15"/>
					<TextBlock Style="{StaticResource TextBlockStyle}" Text="AddFolder"/>
				</StackPanel>
			</Button>

			<Button HorizontalContentAlignment="Left" Command="{Binding AddTmCommand}" ToolTip="Add TMs">
				<StackPanel Orientation="Horizontal">
					<Image Source="../Resources/PlusSign.ico" Width="15" Height="15"></Image>
					<TextBlock Style="{StaticResource TextBlockStyle}" Text="AddTMs"/>
				</StackPanel>
			</Button>

			<Button HorizontalContentAlignment="Left" Command="{Binding RemoveTMsCommand}" ToolTip="Remove TMs">
				<StackPanel Orientation="Horizontal">
					<Image Source="../Resources/Remove.ico" Width="15" Height="15"></Image>
					<TextBlock Style="{StaticResource TextBlockStyle}" Text="RemoveTMs"/>
				</StackPanel>
			</Button>
		</StackPanel>

		<DataGrid  Grid.Row="5" Grid.Column="0" Grid.ColumnSpan="2" ItemsSource="{Binding TmCollection, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
		           IsReadOnly="True"
				   Style="{StaticResource FilesGridStyle}"
		           SelectionMode="Extended"
		           SelectionUnit="FullRow"
		           Margin="5,0,10,10"
				   VerticalScrollBarVisibility="Auto"
		           AllowDrop="True"
		           utilities:DropBehavior.PreviewDropCommand="{Binding DragEnterCommand}"
		           GridLinesVisibility="None">

			<DataGrid.RowStyle>
				<Style TargetType="DataGridRow" BasedOn="{StaticResource DgrStyle}" />
			</DataGrid.RowStyle>

			<DataGrid.Columns>
				<DataGridTemplateColumn Width="Auto" MinWidth="50">

					<DataGridTemplateColumn.Header>
							<CheckBox IsChecked="{Binding Path=DataContext.AllTmsChecked, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
									  FontSize="11"
									  VerticalContentAlignment="Top"
									  Style="{StaticResource CheckBoxStyle}"
									  Content="Use"/>
					</DataGridTemplateColumn.Header>

					<DataGridTemplateColumn.CellTemplate>
						<DataTemplate>
							<CheckBox Style="{StaticResource CheckBoxStyle}" IsChecked="{Binding IsSelected, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Margin="4,0,0,0"/>
						</DataTemplate>
					</DataGridTemplateColumn.CellTemplate>
				</DataGridTemplateColumn>

				<DataGridTemplateColumn Width="*" Header="TM Name" SortMemberPath="Name">
					<DataGridTemplateColumn.CellTemplate>
						<DataTemplate>
							<StackPanel Orientation="Horizontal" HorizontalAlignment="Left">
								<Image Source="{Binding Icon}" Width="25" Height="25" HorizontalAlignment="Center" />
								<TextBlock Text="{Binding Name}" Margin="5" HorizontalAlignment="Left" />
							</StackPanel>
						</DataTemplate>
					</DataGridTemplateColumn.CellTemplate>
				</DataGridTemplateColumn>

				<DataGridTemplateColumn Width="0.2*" Header="Source language" SortMemberPath="SourceLanguage">
					<DataGridTemplateColumn.CellTemplate>
						<DataTemplate>
							<DockPanel>
								<Image DockPanel.Dock="Left" Source="{Binding SourceLanguageFlagUri}" Width="25" Height="25"/>
								<TextBlock DockPanel.Dock="Left" Text="{Binding SourceLanguage}" Margin="5" />
								<Image DockPanel.Dock="Right" Source="{Binding SourceStatus, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"  
								       ToolTip="{Binding SourceStatusToolTip}" 
								       Style="{StaticResource ImageStyle}"/>
							</DockPanel>
						</DataTemplate>
					</DataGridTemplateColumn.CellTemplate>
				</DataGridTemplateColumn>

				<DataGridTemplateColumn Width="0.2*" Header="Target language" SortMemberPath="TargetLanguage">
					<DataGridTemplateColumn.CellTemplate>
						<DataTemplate>
							<DockPanel>
								<Image DockPanel.Dock="Left" Source="{Binding TargetLanguageFlagUri}" Width="25" Height="25" />
								<TextBlock DockPanel.Dock="Left" Text="{Binding TargetLanguage}" Margin="5"  />
								<Image DockPanel.Dock="Right" 
									   Source="{Binding TargetStatus, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
								       ToolTip="{Binding TargetStatusToolTip}" 
								       Style="{StaticResource ImageStyle}"/>
							</DockPanel>
						</DataTemplate>
					</DataGridTemplateColumn.CellTemplate>
				</DataGridTemplateColumn>

			</DataGrid.Columns>
		</DataGrid>
		<StackPanel Grid.Row="6" Grid.Column="1" Orientation="Horizontal" HorizontalAlignment="Right">
			<controls:ProgressRing Visibility="{Binding ProgressVisibility}" Width="30" />
			<Button IsEnabled="{Binding CanExecuteApply, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource SdlWizardStyleButtonGreen}" HorizontalAlignment="Right" Margin="0,10,10,0" Command="{Binding ApplyTemplateCommand}" Content="Apply" ToolTip="{x:Static applyTmTemplate:PluginResources.Apply_button_Tooltip}" />
		</StackPanel>
	</Grid>
</controls:MetroWindow>