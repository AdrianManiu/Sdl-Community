<UserControl x:Class="Sdl.Community.ApplyTMTemplate.UI.TimedTextBox"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:applyTmTemplate="clr-namespace:Sdl.Community.ApplyTMTemplate"
             xmlns:controls="http://metro.mahapps.com/winfx/xaml/controls"
             xmlns:ui="clr-namespace:Sdl.Community.ApplyTMTemplate.UI"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">
	<UserControl.Resources>
		<ControlTemplate x:Key="Unpressed" TargetType="{x:Type Button}">
			<Image Source="../Resources/DropDownTriangle.ico"/>
		</ControlTemplate>
		<ControlTemplate x:Key="Pressed" TargetType="{x:Type Button}">
			<Image Source="../Resources/GreenDropDown.ico"/>
		</ControlTemplate>
		
	</UserControl.Resources>
	<Border BorderBrush="Black"
	        BorderThickness="0.5"
	        VerticalAlignment="Center"
	        Height="30">
		<DockPanel>
			<StackPanel DockPanel.Dock="Right" VerticalAlignment="Center">
				<Button Height="20"
						Margin="0,0,8,0"
				        Background="White" BorderBrush="White"
				        Command="{Binding MenuCommand}"
						HorizontalAlignment="Right">
					<Button.Style>
						<Style TargetType="{x:Type Button}">
							<Setter Property="Template" Value="{StaticResource Unpressed}" />
							<Style.Triggers>
								<Trigger Property="IsPressed" Value="True">
									<Setter Property="Template" Value="{StaticResource Pressed}" />
								</Trigger>
							</Style.Triggers>
						</Style>
					</Button.Style>
				</Button>
				<Popup IsOpen="{Binding IsOpen}" 
				       Height="Auto"
				       PopupAnimation="Fade"
					   StaysOpen="False"
				       AllowsTransparency="True"
				       HorizontalAlignment="Left">
					<Border BorderBrush="Black"
					        BorderThickness="0.5">
						<StackPanel Background="WhiteSmoke">
							<Button Command="{Binding BrowseCommand}" >
								<TextBlock Padding="5" Text="Choose template" />
							</Button>
							<Button Name="ImportFromExcel" Command="{Binding ImportCommand}" CommandParameter="{Binding RelativeSource={RelativeSource Self}}">
								<TextBlock Padding="5" Text="{x:Static applyTmTemplate:PluginResources.Import_Excel_To_Template}" />
							</Button>
							<Button Name="ImportFromTms" Command="{Binding ImportCommand}" CommandParameter="{Binding RelativeSource={RelativeSource Self}}">
								<TextBlock Padding="5" Text="{x:Static applyTmTemplate:PluginResources.Import_Tms_To_Template}" />
							</Button>
							<Button Name="ExportToExcel" Command="{Binding ExportCommand}">
								<TextBlock Padding="5" Text="{x:Static applyTmTemplate:PluginResources.Export_To_Excel}" />
							</Button>
						</StackPanel>
					</Border>
				</Popup>
			</StackPanel>
			<TextBox DockPanel.Dock="Left" BorderBrush="White"
					 FontFamily="Calibri"
					 VerticalAlignment="Center" VerticalContentAlignment="Center"
			         Height="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=ui:TimedTextBox}, Path=Height}"
			         controls:TextBoxHelper.Watermark="Enter path of template..."
			         Text="{Binding Path, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
				<TextBox.Style>
					<Style TargetType="TextBox">
						<Setter Property="Template">
							<Setter.Value>
								<ControlTemplate TargetType="{x:Type TextBox}">
									<Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
										<ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
									</Border>
									<ControlTemplate.Triggers>
										<Trigger Property="IsEnabled" Value="false">
											<Setter Property="Opacity" TargetName="border" Value="0.56"/>
										</Trigger>
										<Trigger Property="IsMouseOver" Value="true">
											<Setter Property="BorderBrush" TargetName="border" Value="White"/>
										</Trigger>
										<Trigger Property="IsFocused" Value="true">
											<Setter Property="BorderBrush" TargetName="border" Value="White"/>
										</Trigger>
									</ControlTemplate.Triggers>
								</ControlTemplate>
							</Setter.Value>
						</Setter>
					</Style>
				</TextBox.Style>
			</TextBox>
		</DockPanel>
	</Border>
</UserControl>
